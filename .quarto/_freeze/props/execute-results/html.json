{
  "hash": "e5bbbc2098dfb859cd710dde131ea5f5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Interactive Land and Houses Map\"\nformat: html\n---\n\n\n\n\n\n:::{.grid}\n\n::::{.g-col-3}\n### Filters\n\n```html\n<div>\n  <label><strong>Property Type</strong></label><br>\n  <input type=\"radio\" name=\"property_type\" value=\"Land\" onchange=\"filterMap()\" checked> Land\n  <input type=\"radio\" name=\"property_type\" value=\"House\" onchange=\"filterMap()\"> House\n</div>\n\n<div id=\"land_filters\" style=\"display: block;\">\n  <label><strong>Status</strong></label><br>\n  <select id=\"land_status\" onchange=\"filterMap()\">\n    <option value=\"All\">All</option>\n    <option value=\"Available\">Available</option>\n    <option value=\"Sold\">Sold</option>\n  </select><br>\n  <label><strong>Price Range</strong></label><br>\n  <input type=\"number\" id=\"land_price_min\" value=\"100000\" onchange=\"filterMap()\"> to\n  <input type=\"number\" id=\"land_price_max\" value=\"500000\" onchange=\"filterMap()\">\n</div>\n\n<div id=\"house_filters\" style=\"display: none;\">\n  <label><strong>Status</strong></label><br>\n  <select id=\"house_status\" onchange=\"filterMap()\">\n    <option value=\"All\">All</option>\n    <option value=\"Available\">Available</option>\n    <option value=\"Rented\">Rented</option>\n  </select><br>\n  <label><strong>Price Range</strong></label><br>\n  <input type=\"number\" id=\"house_price_min\" value=\"1000000\" onchange=\"filterMap()\"> to\n  <input type=\"number\" id=\"house_price_max\" value=\"5000000\" onchange=\"filterMap()\"><br>\n  <label><strong>Bedrooms</strong></label><br>\n  <select id=\"bedrooms\" onchange=\"filterMap()\">\n    <option value=\"All\">All</option>\n    <option value=\"1\">1</option>\n    <option value=\"2\">2</option>\n    <option value=\"3\">3</option>\n    <option value=\"4\">4</option>\n    <option value=\"5\">5</option>\n  </select>\n</div>\n```\n\n::::\n\n::::{.g-col-9}\n### Map\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Initial Leaflet map (placeholder, JavaScript will handle rendering)\nleaflet() %>%\n  addTiles() %>%\n  setView(lng = 36.8, lat = -1.25, zoom = 12)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-c64296f5794e54a48732\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c64296f5794e54a48732\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org/copyright/\\\">OpenStreetMap<\\/a>,  <a href=\\\"https://opendatacommons.org/licenses/odbl/\\\">ODbL<\\/a>\"}]}],\"setView\":[[-1.25,36.8],12,[]]},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n```javascript\n// Load data and initialize map\nlet map;\nlet markers = L.layerGroup();\nfetch('data.json')\n  .then(response => response.json())\n  .then(data => {\n    map = L.map('map').setView([-1.25, 36.8], 12);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Â© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n    }).addTo(map);\n    markers.addTo(map);\n    window.mapData = data.features; // Store data globally\n    filterMap(); // Initial filter\n  });\n\n// Filter and update map\nfunction filterMap() {\n  markers.clearLayers();\n  const propertyType = document.querySelector('input[name=\"property_type\"]:checked').value;\n\n  // Show/hide filter panels\n  document.getElementById('land_filters').style.display = propertyType === 'Land' ? 'block' : 'none';\n  document.getElementById('house_filters').style.display = propertyType === 'House' ? 'block' : 'none';\n\n  // Get filter values\n  const landStatus = document.getElementById('land_status').value;\n  const landPriceMin = parseFloat(document.getElementById('land_price_min').value) || 0;\n  const landPriceMax = parseFloat(document.getElementById('land_price_max').value) || Infinity;\n  const houseStatus = document.getElementById('house_status').value;\n  const housePriceMin = parseFloat(document.getElementById('house_price_min').value) || 0;\n  const housePriceMax = parseFloat(document.getElementById('house_price_max').value) || Infinity;\n  const bedrooms = document.getElementById('bedrooms').value;\n\n  // Filter data\n  const filteredData = window.mapData.filter(feature => {\n    const props = feature.properties;\n    if (propertyType === 'Land' && props.type === 'Land') {\n      return (landStatus === 'All' || props.status === landStatus) &&\n             props.price >= landPriceMin && props.price <= landPriceMax;\n    } else if (propertyType === 'House' && props.type === 'House') {\n      return (houseStatus === 'All' || props.status === houseStatus) &&\n             props.price >= housePriceMin && props.price <= housePriceMax &&\n             (bedrooms === 'All' || props.bedrooms === parseInt(bedrooms));\n    }\n    return false;\n  });\n\n  // Add markers\n  filteredData.forEach(feature => {\n    const coords = feature.geometry.coordinates;\n    const props = feature.properties;\n    L.circleMarker([coords[1], coords[0]], {\n      radius: 8,\n      fillColor: props.type === 'Land' ? 'green' : 'blue',\n      color: 'black',\n      weight: 1,\n      fillOpacity: 0.6\n    })\n      .bindPopup(`${props.type}<br>Status: ${props.status}<br>Price: ${props.price}` +\n                (props.type === 'House' ? `<br>Bedrooms: ${props.bedrooms}` : ''))\n      .addTo(markers);\n  });\n}\n```\n::::\n\n:::\n```\n\n**Changes Made**:\n- Renamed the first R chunk from `setup` to `init-data` to avoid duplication.\n- Added a new R chunk labeled `map-data` for writing the JSON file.\n- Labeled the map rendering chunk as `map-render`.\n- Kept all functionality intact: HTML radio buttons for \"Land\" or \"House,\" conditional filter panels, and JavaScript for client-side map filtering.\n- Ensured the file is static (no `server: shiny`) for compatibility with Quarto website projects.\n\n**To Render**:\n1. Ensure R packages `leaflet`, `dplyr`, `sf`, and `jsonlite` are installed.\n2. Save the file as `props.qmd`.\n3. Run the command:\n   ```bash\n   quarto preview props.qmd --to html --no-watch-inputs --no-browse\n   ```\n4. Verify the output HTML and `data.json` file are generated in the same directory.\n\n**Notes**:\n- The map uses OpenStreetMap tiles and displays markers with popups showing property details.\n- JavaScript handles filtering reactively in the browser, toggling filter panels based on property type.\n- If you encounter issues (e.g., `data.json` not found), ensure the working directory is set correctly or use an absolute path for `write_json`.\n- For deployment, copy the rendered HTML and `data.json` to a static host (e.g., GitHub Pages, Netlify).\n\nIf you still face errors or need further adjustments (e.g., CSS styling, additional filters), let me know!",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/leaflet-binding-2.2.2.9000/leaflet.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}