{"title":"Available Properties","markdown":{"yaml":{"title":"Available Properties","format":{"dashboard":{"theme":"cosmo","orientation":"rows","sidebar":"open","reader-mode":false}},"runtime":"shiny"},"headingText":"Load datasets (adjust path as needed)","containsRefs":false,"markdown":"\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\n\n\nlibrary(shiny)\nlibrary(leaflet)\nlibrary(DT)\nlibrary(dplyr)\nlibrary(sf)\n\nparcels <- st_read(\"parcels.shp\", quiet = TRUE)%>% \n  st_make_valid() %>% \n  st_transform(crs = 4326)\nkejaz <- st_read(\"kejaz.shp\", quiet = TRUE)%>% \n  st_make_valid() %>% \n  st_transform(crs = 4326)\n\n# Harmonize for filtering\nkejaz$Status <- kejaz$For\nkejaz$Prc.Rnt <- as.numeric(kejaz$Prc.Rnt)\nkejaz$location <- kejaz$Nghbrhd\n\n# Assign random status to parcels\nset.seed(123)  # for reproducibility\nparcels$Status <- sample(c(\"For Sale\", \"For Rent\"), nrow(parcels), replace = TRUE)\nparcels$Price <- sample(890000:55000000, nrow(parcels), replace = TRUE)\nparcels$Size <- parcels$AREA_HA\n```\n\n\n## Filters\n\n###  {.sidebar}\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\nradioButtons(\"dataset\", \"Select Dataset:\",\n             choices = c(\"Houses\" = \"kejaz\", \"Parcels\" = \"parcels\"),\n             selected = \"kejaz\")\n\nuiOutput(\"dynamic_filters\")\n\n```\n\n\n### Interactive Map\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\nrenderLeaflet({\n  filtered_data <- reactive({\n  if (input$dataset == \"kejaz\") {\n    data <- kejaz\n    if (!is.null(input$typology)) {\n      data <- data %>% filter(HsTyplg %in% input$typology)\n    }\n    if (!is.null(input$status)) {\n      data <- data %>% filter(For %in% input$status)\n    }\n    if (!is.null(input$location)) {\n      data <- data %>% filter(Nghbrhd %in% input$location)\n    }\n    if (!is.null(input$price_range)) {\n      data <- data %>% filter(Prc.Rnt >= input$price_range[1], Prc.Rnt <= input$price_range[2])\n    }\n  } else {\n    data <- parcels\n    if (!is.null(input$status_p)) {\n      data <- data %>% filter(Status %in% input$status_p)\n    }\n    if (!is.null(input$size_range)) {\n      data <- data %>% filter(AREA_HA >= input$size_range[1], AREA_HA <= input$size_range[2])\n    }\n  }\n  data\n})\n\n\noutput$dynamic_filters <- renderUI({\n  if (input$dataset == \"kejaz\") {\n    tagList(\n      selectInput(\"typology\", \"Select Typology:\",\n                  choices = unique(kejaz$HsTyplg), multiple = TRUE),\n      selectInput(\"status\", \"Status:\",\n                  choices = unique(kejaz$For), multiple = TRUE),\n      selectInput(\"location\", \"Location:\",\n                  choices = unique(kejaz$Nghbrhd), multiple = TRUE),\n      sliderInput(\"price_range\", \"Price/Rent Range:\",\n                  min = min(kejaz$Prc.Rnt, na.rm = TRUE),\n                  max = max(kejaz$Prc.Rnt, na.rm = TRUE),\n                  value = c(min(kejaz$Prc.Rnt, na.rm = TRUE), max(kejaz$Prc.Rnt, na.rm = TRUE)))\n    )\n  } else {\n    tagList(\n      selectInput(\"status_p\", \"Status:\",\n                  choices = unique(parcels$Status), multiple = TRUE),\n      sliderInput(\"size_range\", \"Parcel Size (Ha):\",\n                  min = min(parcels$AREA_HA, na.rm = TRUE),\n                  max = max(parcels$AREA_HA, na.rm = TRUE),\n                  value = c(min(parcels$AREA_HA, na.rm = TRUE), max(parcels$AREA_HA, na.rm = TRUE)))\n    )\n  }\n})\n  data <- filtered_data()\n  if (input$dataset == \"kejaz\") {\n    leaflet(data) %>%\n      addTiles() %>%\n      addCircleMarkers(\n        radius = 6,\n        stroke = FALSE,\n        fillColor = \"blue\",\n        fillOpacity = 0.7,\n        popup = ~paste0(\n          \"<strong>Typology:</strong> \", HsTyplg, \"<br>\",\n          \"<strong>Status:</strong> \", For, \"<br>\",\n          \"<strong>Price/Rent:</strong> \", Prc.Rnt, \"<br>\",\n          \"<strong>Location:</strong> \", Nghbrhd\n        )\n      )\n  } else {\n    leaflet(data) %>%\n      addTiles() %>%\n      addPolygons(\n        fillColor = \"green\",\n        color = \"#444444\",\n        weight = 1,\n        fillOpacity = 0.4,\n        popup = ~paste0(\n          \"<strong>Parcel No:</strong> \", PARCEL_NO, \"<br>\",\n          \"<strong>Area (Ha):</strong> \", AREA_HA\n        )\n      )\n  }\n})\n\n```\n\n## Data Table\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\nrenderDT({\n  filtered_data <- reactive({\n  if (input$dataset == \"kejaz\") {\n    data <- kejaz\n    if (!is.null(input$typology)) {\n      data <- data %>% filter(HsTyplg %in% input$typology)\n    }\n    if (!is.null(input$status)) {\n      data <- data %>% filter(For %in% input$status)\n    }\n    if (!is.null(input$location)) {\n      data <- data %>% filter(Nghbrhd %in% input$location)\n    }\n    if (!is.null(input$price_range)) {\n      data <- data %>% filter(Prc.Rnt >= input$price_range[1], Prc.Rnt <= input$price_range[2])\n    }\n  } else {\n    data <- parcels\n    if (!is.null(input$status_p)) {\n      data <- data %>% filter(Status %in% input$status_p)\n    }\n    if (!is.null(input$size_range)) {\n      data <- data %>% filter(AREA_HA >= input$size_range[1], AREA_HA <= input$size_range[2])\n    }\n  }\n  data\n})\n\n\noutput$dynamic_filters <- renderUI({\n  if (input$dataset == \"kejaz\") {\n    tagList(\n      selectInput(\"typology\", \"Select Typology:\",\n                  choices = unique(kejaz$HsTyplg), multiple = TRUE),\n      selectInput(\"status\", \"Status:\",\n                  choices = unique(kejaz$For), multiple = TRUE),\n      selectInput(\"location\", \"Location:\",\n                  choices = unique(kejaz$Nghbrhd), multiple = TRUE),\n      sliderInput(\"price_range\", \"Price/Rent Range:\",\n                  min = min(kejaz$Prc.Rnt, na.rm = TRUE),\n                  max = max(kejaz$Prc.Rnt, na.rm = TRUE),\n                  value = c(min(kejaz$Prc.Rnt, na.rm = TRUE), max(kejaz$Prc.Rnt, na.rm = TRUE)))\n    )\n  } else {\n    tagList(\n      selectInput(\"status_p\", \"Status:\",\n                  choices = unique(parcels$Status), multiple = TRUE),\n      sliderInput(\"size_range\", \"Parcel Size (Ha):\",\n                  min = min(parcels$AREA_HA, na.rm = TRUE),\n                  max = max(parcels$AREA_HA, na.rm = TRUE),\n                  value = c(min(parcels$AREA_HA, na.rm = TRUE), max(parcels$AREA_HA, na.rm = TRUE)))\n    )\n  }\n})\n\n  data <- filtered_data()\n  if (input$dataset == \"kejaz\") {\n    datatable(st_drop_geometry(data)[, c(\"HsTyplg\", \"For\", \"Nghbrhd\", \"Prc.Rnt\", \"AdddAmn\")])\n  } else {\n    datatable(st_drop_geometry(data)[, c(\"PARCEL_NO\", \"AREA_HA\", \"AUTH_DATE\", \"F_R\")])\n  }\n})\n\n```\n","srcMarkdownNoYaml":"\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\n\n\nlibrary(shiny)\nlibrary(leaflet)\nlibrary(DT)\nlibrary(dplyr)\nlibrary(sf)\n\n# Load datasets (adjust path as needed)\nparcels <- st_read(\"parcels.shp\", quiet = TRUE)%>% \n  st_make_valid() %>% \n  st_transform(crs = 4326)\nkejaz <- st_read(\"kejaz.shp\", quiet = TRUE)%>% \n  st_make_valid() %>% \n  st_transform(crs = 4326)\n\n# Harmonize for filtering\nkejaz$Status <- kejaz$For\nkejaz$Prc.Rnt <- as.numeric(kejaz$Prc.Rnt)\nkejaz$location <- kejaz$Nghbrhd\n\n# Assign random status to parcels\nset.seed(123)  # for reproducibility\nparcels$Status <- sample(c(\"For Sale\", \"For Rent\"), nrow(parcels), replace = TRUE)\nparcels$Price <- sample(890000:55000000, nrow(parcels), replace = TRUE)\nparcels$Size <- parcels$AREA_HA\n```\n\n\n## Filters\n\n###  {.sidebar}\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\nradioButtons(\"dataset\", \"Select Dataset:\",\n             choices = c(\"Houses\" = \"kejaz\", \"Parcels\" = \"parcels\"),\n             selected = \"kejaz\")\n\nuiOutput(\"dynamic_filters\")\n\n```\n\n\n### Interactive Map\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\nrenderLeaflet({\n  filtered_data <- reactive({\n  if (input$dataset == \"kejaz\") {\n    data <- kejaz\n    if (!is.null(input$typology)) {\n      data <- data %>% filter(HsTyplg %in% input$typology)\n    }\n    if (!is.null(input$status)) {\n      data <- data %>% filter(For %in% input$status)\n    }\n    if (!is.null(input$location)) {\n      data <- data %>% filter(Nghbrhd %in% input$location)\n    }\n    if (!is.null(input$price_range)) {\n      data <- data %>% filter(Prc.Rnt >= input$price_range[1], Prc.Rnt <= input$price_range[2])\n    }\n  } else {\n    data <- parcels\n    if (!is.null(input$status_p)) {\n      data <- data %>% filter(Status %in% input$status_p)\n    }\n    if (!is.null(input$size_range)) {\n      data <- data %>% filter(AREA_HA >= input$size_range[1], AREA_HA <= input$size_range[2])\n    }\n  }\n  data\n})\n\n\noutput$dynamic_filters <- renderUI({\n  if (input$dataset == \"kejaz\") {\n    tagList(\n      selectInput(\"typology\", \"Select Typology:\",\n                  choices = unique(kejaz$HsTyplg), multiple = TRUE),\n      selectInput(\"status\", \"Status:\",\n                  choices = unique(kejaz$For), multiple = TRUE),\n      selectInput(\"location\", \"Location:\",\n                  choices = unique(kejaz$Nghbrhd), multiple = TRUE),\n      sliderInput(\"price_range\", \"Price/Rent Range:\",\n                  min = min(kejaz$Prc.Rnt, na.rm = TRUE),\n                  max = max(kejaz$Prc.Rnt, na.rm = TRUE),\n                  value = c(min(kejaz$Prc.Rnt, na.rm = TRUE), max(kejaz$Prc.Rnt, na.rm = TRUE)))\n    )\n  } else {\n    tagList(\n      selectInput(\"status_p\", \"Status:\",\n                  choices = unique(parcels$Status), multiple = TRUE),\n      sliderInput(\"size_range\", \"Parcel Size (Ha):\",\n                  min = min(parcels$AREA_HA, na.rm = TRUE),\n                  max = max(parcels$AREA_HA, na.rm = TRUE),\n                  value = c(min(parcels$AREA_HA, na.rm = TRUE), max(parcels$AREA_HA, na.rm = TRUE)))\n    )\n  }\n})\n  data <- filtered_data()\n  if (input$dataset == \"kejaz\") {\n    leaflet(data) %>%\n      addTiles() %>%\n      addCircleMarkers(\n        radius = 6,\n        stroke = FALSE,\n        fillColor = \"blue\",\n        fillOpacity = 0.7,\n        popup = ~paste0(\n          \"<strong>Typology:</strong> \", HsTyplg, \"<br>\",\n          \"<strong>Status:</strong> \", For, \"<br>\",\n          \"<strong>Price/Rent:</strong> \", Prc.Rnt, \"<br>\",\n          \"<strong>Location:</strong> \", Nghbrhd\n        )\n      )\n  } else {\n    leaflet(data) %>%\n      addTiles() %>%\n      addPolygons(\n        fillColor = \"green\",\n        color = \"#444444\",\n        weight = 1,\n        fillOpacity = 0.4,\n        popup = ~paste0(\n          \"<strong>Parcel No:</strong> \", PARCEL_NO, \"<br>\",\n          \"<strong>Area (Ha):</strong> \", AREA_HA\n        )\n      )\n  }\n})\n\n```\n\n## Data Table\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\nrenderDT({\n  filtered_data <- reactive({\n  if (input$dataset == \"kejaz\") {\n    data <- kejaz\n    if (!is.null(input$typology)) {\n      data <- data %>% filter(HsTyplg %in% input$typology)\n    }\n    if (!is.null(input$status)) {\n      data <- data %>% filter(For %in% input$status)\n    }\n    if (!is.null(input$location)) {\n      data <- data %>% filter(Nghbrhd %in% input$location)\n    }\n    if (!is.null(input$price_range)) {\n      data <- data %>% filter(Prc.Rnt >= input$price_range[1], Prc.Rnt <= input$price_range[2])\n    }\n  } else {\n    data <- parcels\n    if (!is.null(input$status_p)) {\n      data <- data %>% filter(Status %in% input$status_p)\n    }\n    if (!is.null(input$size_range)) {\n      data <- data %>% filter(AREA_HA >= input$size_range[1], AREA_HA <= input$size_range[2])\n    }\n  }\n  data\n})\n\n\noutput$dynamic_filters <- renderUI({\n  if (input$dataset == \"kejaz\") {\n    tagList(\n      selectInput(\"typology\", \"Select Typology:\",\n                  choices = unique(kejaz$HsTyplg), multiple = TRUE),\n      selectInput(\"status\", \"Status:\",\n                  choices = unique(kejaz$For), multiple = TRUE),\n      selectInput(\"location\", \"Location:\",\n                  choices = unique(kejaz$Nghbrhd), multiple = TRUE),\n      sliderInput(\"price_range\", \"Price/Rent Range:\",\n                  min = min(kejaz$Prc.Rnt, na.rm = TRUE),\n                  max = max(kejaz$Prc.Rnt, na.rm = TRUE),\n                  value = c(min(kejaz$Prc.Rnt, na.rm = TRUE), max(kejaz$Prc.Rnt, na.rm = TRUE)))\n    )\n  } else {\n    tagList(\n      selectInput(\"status_p\", \"Status:\",\n                  choices = unique(parcels$Status), multiple = TRUE),\n      sliderInput(\"size_range\", \"Parcel Size (Ha):\",\n                  min = min(parcels$AREA_HA, na.rm = TRUE),\n                  max = max(parcels$AREA_HA, na.rm = TRUE),\n                  value = c(min(parcels$AREA_HA, na.rm = TRUE), max(parcels$AREA_HA, na.rm = TRUE)))\n    )\n  }\n})\n\n  data <- filtered_data()\n  if (input$dataset == \"kejaz\") {\n    datatable(st_drop_geometry(data)[, c(\"HsTyplg\", \"For\", \"Nghbrhd\", \"Prc.Rnt\", \"AdddAmn\")])\n  } else {\n    datatable(st_drop_geometry(data)[, c(\"PARCEL_NO\", \"AREA_HA\", \"AUTH_DATE\", \"F_R\")])\n  }\n})\n\n```\n"},"formats":{"dashboard":{"identifier":{"display-name":"HTML","target-format":"dashboard","base-format":"dashboard"},"execute":{"fig-width":8,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":"all","plotly-connected":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"props.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","page-layout":"custom","sidebar":[{"id":"blog","collapse-level":2,"contents":["blog.qmd",{"section":"2025","contents":"posts/*"}]},"open"],"title":"Available Properties","runtime":"shiny","theme":"cosmo","orientation":"rows","reader-mode":false},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}